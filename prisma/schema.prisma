// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id           Int         @id @default(autoincrement())
  title        String
  description  String
  release_date DateTime
  poster_url   String
  age_rating   Int
  ticket_price Int
  screenings   Screening[] @relation("MovieScreening")
  Ticket       Ticket[]

  @@map("movies")
}

model Studio {
  id         Int         @id @default(autoincrement())
  name       String
  seats      Seat[]
  screenings Screening[]

  @@map("studios")
}

model Seat {
  id         Int         @id @default(autoincrement())
  seatNumber Int
  studio     Studio      @relation(fields: [studio_id], references: [id])
  studio_id   Int
  screenings Screening[]
  tickets    Ticket[]

  @@index([studio_id])

  @@map("seats")
}

model Ticket {
  id          Int       @id @default(autoincrement())
  seat        Seat      @relation(fields: [seatId], references: [id])
  seatId      Int
  movie       Movie     @relation(fields: [movie_id], references: [id])
  movie_id     Int
  user        User?     @relation(fields: [user_id], references: [id])
  user_id      Int?
  screening   Screening @relation(fields: [screening_id], references: [id])
  screening_id Int
  booking     Booking?  @relation(fields: [booking_id], references: [id])
  booking_id   Int?

  @@index([movie_id])
  @@index([user_id])
  @@index([screening_id])

  @@map("tickets")
}

model User {
  id       Int       @id @default(autoincrement())
  fullname String
  username String    @unique
  password String
  age      Int // Add the age field
  balance  Float     @default(0)
  tickets  Ticket[]
  bookings Booking[]
  role     String?

  @@map("users")
}

model Screening {
  id         Int      @id @default(autoincrement())
  start_time DateTime
  movie      Movie    @relation("MovieScreening", fields: [movie_id], references: [id])
  movie_id    Int
  studio     Studio   @relation(fields: [studio_id], references: [id])
  studio_id   Int
  seats      Seat[]
  tickets    Ticket[]

  @@map("screenings")
}

model Booking {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [user_id], references: [id])
  user_id       Int
  tickets      Ticket[]
  checkout_date DateTime @default(now())
  total_booking Int

  @@map("bookings")
}
